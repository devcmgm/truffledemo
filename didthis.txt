++++++++++++++++++++++++++++++++++++++++++
cmd-3> truffle migrate
++++++++++++++++++++++++++++++++++++++++++


Compiling your contracts...
===========================
> Everything is up to date, there is nothing to compile.


Starting migrations...
======================
> Network name:    'development'
> Network id:      5777
> Block gas limit: 0x6691b7


1_initial_migration.js
======================

   Deploying 'Migrations'
   ----------------------
   > transaction hash:
0xf3fe7f250af6a7ba16a7774b3fc3f770eb13e9b36b0e30a4ee8d97b5c1d5cdbf
   > Blocks: 0            Seconds: 0
   > contract address:    0x315aFE8b82Cd655cD93805046ffa060DF4f8fb33
   > block number:        1
   > block timestamp:     1573510680
   > account:             0xfA946c43d9B453Bb06B3bF427cAA7e05C17D3a92
   > balance:             99.99477342
   > gas used:            261329
   > gas price:           20 gwei
   > value sent:          0 ETH
   > total cost:          0.00522658 ETH


   > Saving migration to chain.
   > Saving artifacts
   -------------------------------------
   > Total cost:          0.00522658 ETH


2_deploy_contracts.js
=====================

   Deploying 'ConvertLib'
   ----------------------
   > transaction hash:
0xbcf4e5b0877c1c63928e323deac0651e337b1af3f1dc993233ea6248ec1c0bc0
   > Blocks: 0            Seconds: 0
   > contract address:    0xc56D4852F77B9f22e8C967a5CD2392E6c14c5c5a
   > block number:        3
   > block timestamp:     1573510680
   > account:             0xfA946c43d9B453Bb06B3bF427cAA7e05C17D3a92
   > balance:             99.9918605
   > gas used:            103623
   > gas price:           20 gwei
   > value sent:          0 ETH
   > total cost:          0.00207246 ETH


   Linking
   -------
   * Contract: MetaCoin <--> Library: ConvertLib (at address:
0xc56D4852F77B9f22e8C967a5CD2392E6c14c5c5a)

   Deploying 'MetaCoin'
   --------------------
   > transaction hash:
0x680b3589fb35c45e52dfcae4aa6fdf62a2237e62448f8db81f12876ea9b183d0
   > Blocks: 0            Seconds: 0
   > contract address:    0x31255d5E4C077E7B6a27480e45D04C33356eCb24
   > block number:        4
   > block timestamp:     1573510681
   > account:             0xfA946c43d9B453Bb06B3bF427cAA7e05C17D3a92
   > balance:             99.98509352
   > gas used:            338349
   > gas price:           20 gwei
   > value sent:          0 ETH
   > total cost:          0.00676698 ETH


   > Saving migration to chain.
   > Saving artifacts
   -------------------------------------
   > Total cost:          0.00883944 ETH


Summary
=======
> Total deployments:   3
> Final cost:          0.01406602 ETH


++++++++++++++++++++++++++++++++++++++++++
cmd-4> truffle test
++++++++++++++++++++++++++++++++++++++++++


Using network 'development'.


Compiling your contracts...
===========================
> Compiling ./test/TestMetaCoin.sol



  TestMetaCoin
    ? testInitialBalanceUsingDeployedContract (107ms)
    ? testInitialBalanceWithNewMetaCoin (94ms)

  Contract: MetaCoin
    ? should put 10000 MetaCoin in the first account (45ms)
    ? should call a function that depends on a linked library (109ms)
    ? should send coin correctly (170ms)


  5 passing (9s)

++++++++++++++++++++++++++++++++++++++++++
cmd-5> truffle console
++++++++++++++++++++++++++++++++++++++++++


truffle console

truffle(development)> let instance = await MetaCoin.deployed()
[Output]: undefined

truffle(development)> let accounts = await web3.eth.getAccounts()
[Output]: undefined

truffle(development)> let balance = await instance.getBalance(accounts[0])
[Output]: undefined

truffle(development)> balance.toNumber()
[Output]: 10000

truffle(development)> let ether = await instance.getBalanceInEth(accounts[0])
[Output]: undefined

truffle(development)> ether.toNumber()
[Output]: 20000

truffle(development)> instance.sendCoin(accounts[1], 500)
[Output]:
{ tx:
   '0xfe8b259a5670c9366378c8dd24242ee54b95b5a041d0ae5ce49a41501bb345c9',
  receipt:
   { transactionHash:
      '0xfe8b259a5670c9366378c8dd24242ee54b95b5a041d0ae5ce49a41501bb345c9',
     transactionIndex: 0,
     blockHash:
      '0x46ac8b917064752e7b01f8f925187289eea2902520a040e6b9e1e118a01930e5',
     blockNumber: 6,
     from: '0xfa946c43d9b453bb06b3bf427caa7e05c17d3a92',
     to: '0x31255d5e4c077e7b6a27480e45d04c33356ecb24',
     gasUsed: 51072,
     cumulativeGasUsed: 51072,
     contractAddress: null,
     logs: [ [Object] ],
     status: true,
     logsBloom:
      '0x
     v: '0x1c',
     r:
      '0xea4aa04298474e734541a1752c549b5e95131784bb963a5f01691b0a0d9097db',
     s:
      '0x56ef936d9f8acec4f98268c253f56cf837ea588fbc611c41da463f6904949348',
     rawLogs: [ [Object] ] },
  logs:
   [ { logIndex: 0,
       transactionIndex: 0,
       transactionHash:
        '0xfe8b259a5670c9366378c8dd24242ee54b95b5a041d0ae5ce49a41501bb345c9',
       blockHash:
        '0x46ac8b917064752e7b01f8f925187289eea2902520a040e6b9e1e118a01930e5',
       blockNumber: 6,
       address: '0x31255d5E4C077E7B6a27480e45D04C33356eCb24',
       type: 'mined',
       id: 'log_fb5a94e3',
       event: 'Transfer',
       args: [Result] } ] }


truffle(development)> let received = await instance.getBalance(accounts[1])
[Output]: undefined

truffle(development)> received.toNumber()
[Output]: 500

truffle(development)> let newBalance = await instance.getBalance(accounts[0])
[Output]: undefined

truffle(development)> newBalance.toNumber()
[Output]: 9500

